#include <stdio.h>

int getNumber(unsigned char c, int var[256])
{
	int i;
	if ('0' <= c && c <= '9')
		i = c - '0'; // 1桁の定数.
	else
		i = var[c]; // 1文字の変数.
	return i;
}

int main(int argc, const char **argv)
{
	int var[256], i;
	FILE *fp;
	unsigned char buf[10000], *p;

	if (argc < 2) {
		printf("usage>ktl00 source-file¥n");
		return 1;
	}

	// プログラムファイルの読み込み.
	fp = fopen(argv[1], "rt"); // テキストモードでファイルを開く.
	if (fp == NULL) {
		printf("fopen error : %s\n", argv[1]);
		return 1;
	}
	i = fread(buf, 1, 10000, fp);
	fclose(fp);
	if (i >= 10000) {
		printf("too large file : %s\n", argv[1]);
		return 1;
	}
	buf[i] = 0; // 終端マークを書いておく.

	// 変数の初期化(なんと親切なプログラミング言語).
	for (i = 0; i < 256; i++)
		var[i] = 0;

	// 実行開始.
	p = &buf[0];
	for (;;) {
		if (p[0] == '\n') { // 空行.
			p++;
			continue;
		}
		if (p[0] == 0) break; // ファイル終端.
		if (p[1] == '=') { // 2文字目が"=".
			if (p[3] == '\n') { // 4文字目が改行コード.
				var[p[0]] = getNumber(p[2], var);
				p += 4;
				continue;
			}
			if (p[3] == '+' && p[5] == '\n') {
				var[p[0]] = getNumber(p[2], var) + getNumber(p[4], var);
				p += 6;
				continue;
			}
			if (p[3] == '-' && p[5] == '\n') {
				var[p[0]] = getNumber(p[2], var) - getNumber(p[4], var);
				p += 6;
				continue;
			}
		}
		if (p[0] == 'p' && p[1] == 'r' && p[5] == ' ' && p[7] == '\n') { // 最初の2文字しか調べてない(手抜き).
			printf("%d", var[p[6]]);
			p += 8;
			continue;
		}
		printf("syntax error : %.10s\n", p);
		return 1;
	}
	return 0;
}
